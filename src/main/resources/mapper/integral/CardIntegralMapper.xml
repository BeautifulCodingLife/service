<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.caitu99.service.integral.dao.CardIntegralMapper" >
  <resultMap id="BaseResultMap" type="com.caitu99.service.integral.domain.CardIntegral" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="card_id" property="cardId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
    <result column="gmt_effective" property="gmtEffective" jdbcType="TIMESTAMP" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapPlus" type="com.caitu99.service.integral.controller.vo.CardIntegralLastTime" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="card_id" property="cardId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
    <result column="gmt_effective" property="gmtEffective" jdbcType="TIMESTAMP" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="card_type_id" property="cardTypeId" jdbcType="BIGINT" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="bankname" property="bankname" jdbcType="VARCHAR" />
    <result column="datenum" property="datenum" jdbcType="INTEGER" />
    <result column="scale" property="scale" jdbcType="FLOAT" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, card_id, balance, gmt_effective, gmt_create, gmt_modify, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_card_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="list" resultMap="BaseResultMap" >
   	SELECT 
	<include refid="Base_Column_List" />
	FROM t_card_integral
	where card_id = #{cardId,jdbcType=BIGINT}
  </select>
  
  <select id="selectLastTime" resultMap="ResultMapPlus" parameterType="java.lang.Long" >
  SELECT c.*,d.name bankname from 
	(SELECT a.*,(select datediff(a.gmt_effective,NOW())) datenum,b.name,b.card_type_id,b.card_no,b.scale from t_card_integral a INNER JOIN
	 (select a.*,b.scale from t_user_card a INNER JOIN t_exchange_rule b on a.card_type_id=b.card_type_id) b  on a.card_id=b.id where b.user_id=#{userId,jdbcType=BIGINT}) 
c INNER JOIN t_card_type d on c.card_type_id=d.id
  </select>
  <select id="selectOtherTime" resultMap="ResultMapPlus" parameterType="java.lang.Long" >
  SELECT c.integral_balance balance,c.name,c.card_type_id,c.card_no,c.scale,d.`name` bankname from 
  (select a.*,b.scale from t_user_card a INNER JOIN t_exchange_rule b on a.card_type_id=b.card_type_id) c INNER JOIN 
t_card_type d on c.card_type_id=d.id WHERE user_id=#{userId,jdbcType=BIGINT}
 and c.id not IN(
SELECT a.card_id from t_card_integral a INNER JOIN t_user_card b on a.card_id=b.id where user_id=#{userId,jdbcType=BIGINT})
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_card_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCardId" parameterType="java.lang.Long" >
    delete from t_card_integral
    where card_id = #{cardId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.caitu99.service.integral.domain.CardIntegral" >
    insert into t_card_integral (id, card_id, balance, 
      gmt_effective, gmt_create, gmt_modify, 
      status)
    values (#{id,jdbcType=BIGINT}, #{cardId,jdbcType=BIGINT}, #{balance,jdbcType=INTEGER}, 
      #{gmtEffective,jdbcType=TIMESTAMP}, now(), now(), 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.caitu99.service.integral.domain.CardIntegral" >
    insert into t_card_integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="gmtEffective != null" >
        gmt_effective,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="gmtEffective != null" >
        #{gmtEffective,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.caitu99.service.integral.domain.CardIntegral" >
    update t_card_integral
    <set >
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="gmtEffective != null" >
        gmt_effective = #{gmtEffective,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.caitu99.service.integral.domain.CardIntegral" >
    update t_card_integral
    set card_id = #{cardId,jdbcType=BIGINT},
      balance = #{balance,jdbcType=INTEGER},
      gmt_effective = #{gmtEffective,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  	<select id="selectLastTimeNew" resultMap="ResultMapPlus" parameterType="java.util.Map" >
  		SELECT 
			c.*,d.name bankname 
		from 
			(
				SELECT 
					a.*,(
							select 
								datediff(a.gmt_effective,NOW())
						) datenum,
					b.name,b.card_type_id,b.card_no,b.scale 
				from 
					t_card_integral a 
				INNER JOIN
					(
						select 
							a.*,b.scale 
						from 
							t_user_card a 
						INNER JOIN 
								t_exchange_rule b 
						on 
							a.card_type_id=b.card_type_id
					) b  
					on 
						a.card_id=b.id 
					where 
						b.user_id=#{userId,jdbcType=BIGINT}
			)c 
		INNER JOIN 
			t_card_type d 
		on 
			c.card_type_id=d.id 
		and 
			c.card_id = #{cardId,jdbcType=BIGINT}
  </select>
  
  <select id="selectPageCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
  		select
			count(1)
		from
			(
				select
					a.*, (select datediff(a.gmt_effective, now())) as datenum,
					b.name,
					b.card_type_id,
					b.card_no,
					b.scale
				from
					t_card_integral a
				inner join (
					select
						a.*, b.scale
					from
						t_user_card a
					inner join 
						t_exchange_rule b 
					on 
						a.card_type_id = b.card_type_id
				) b 
				on 
					a.card_id = b.id
				where
					b.user_id = #{userId,jdbcType=BIGINT}
				and 
					a.gmt_effective is not null
			)c
		inner join 
			t_card_type d 
		on 
			c.card_type_id = d.id
		join 
			t_bank
		on
			t_bank.name = d.belong_to
  </select>
  
  <select id="selectLastTimePageList" resultMap="ResultMapPlus" parameterType="java.util.Map" >
  		select
			c.*, d.name as bankname, t_bank.pic_url as pic_url
		from
			(
				select
					a.*, (select datediff(a.gmt_effective, now())) as datenum,
					b.name,
					b.card_type_id,
					b.card_no,
					b.scale
				from
					t_card_integral a
				inner join (
					select
						a.*, b.scale
					from
						t_user_card a
					inner join 
						t_exchange_rule b 
					on 
						a.card_type_id = b.card_type_id
				) b 
				on 
					a.card_id = b.id
				where
					b.user_id = #{userId,jdbcType=BIGINT}
				and 
					a.gmt_effective is not null
			)c
		inner join 
			t_card_type d 
		on 
			c.card_type_id = d.id
		join 
			t_bank
		on
			t_bank.name = d.belong_to
		order by 
			c.gmt_effective 
		limit ${start},${pageSize}
  </select>
  
  	<select id="selectFirstTimeByCardId" resultMap="BaseResultMap" parameterType="java.util.Map" >
		SELECT 
			<include refid="Base_Column_List" />
		FROM 
			t_card_integral
		where 
			card_id = #{cardId,jdbcType=BIGINT}
    	and 
    		TO_DAYS(gmt_effective) >= TO_DAYS(now())
		order by 
			gmt_effective 
		limit ${start},${pageSize}
  	</select>
</mapper>